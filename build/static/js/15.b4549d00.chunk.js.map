{"version":3,"sources":["../node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","../node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","views/ReportCumpFrecuencias.jsx"],"names":["ReloadOutlined","props","ref","React","AntdIcon","_objectSpread","icon","ReloadOutlinedSvg","displayName","require","ReportCumpFrecuencias","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","TriggerReportCumpFrecuencs","getReportCumpFrecuencs","sent","stop","apply","arguments","useEffect","columns","title","_jsx","style","backgroundColor","color","children","dataIndex","key","render","text","moment","format","_jsxs","_Fragment","className","display","justifyContent","padding","marginBottom","Button","onClick","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","date","Date","stringDate","getDay","getMonth","getFullYear","excelFile","Blob","saveAs","concat","CloudDownloadOutlined","Card","zIndex","Table","dataSource","scroll","x"],"mappings":"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","file":"static/js/15.b4549d00.chunk.js","sourcesContent":["// This icon file is generated automatically.\nvar ReloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\" } }] }, \"name\": \"reload\", \"theme\": \"outlined\" };\nexport default ReloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\nReloadOutlined.displayName = 'ReloadOutlined';\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);","import { Card, Table, Button } from \"antd\";\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { CloudDownloadOutlined,ReloadOutlined } from \"@ant-design/icons\";\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\nimport {\r\n  getReportCumpFrecuencs,\r\n  TriggerReportCumpFrecuencs\r\n} from \"../appRedux/services\";\r\nimport moment from \"moment\";\r\nrequire(\"moment-timezone\");\r\n\r\nconst ReportCumpFrecuencias = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSubmit = async () => {\r\n    setLoading(true);\r\n    await TriggerReportCumpFrecuencs();\r\n    const resp = await getReportCumpFrecuencs();\r\n    setData(resp);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    onSubmit();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Numero Documento\r\n        </span>\r\n      ),\r\n      dataIndex: \"numDoc\",\r\n      key: \"numDoc\",\r\n      render: (text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Contrato Plan\r\n        </span>\r\n      ),\r\n      dataIndex: \"plan\",\r\n      key: \"plan\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Programa\r\n        </span>\r\n      ),\r\n      dataIndex: \"program\",\r\n      key: \"program\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Nombre Paciente\r\n        </span>\r\n      ),\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Fecha Ingreso\r\n        </span>\r\n      ),\r\n      dataIndex: \"dateIngreso\",\r\n      key: \"dateIngreso\",\r\n      render: (text) => moment(text).format(\"DD/MM/YYYY\"),\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Asegurador\r\n        </span>\r\n      ),\r\n      dataIndex: \"asegurador\",\r\n      key: \"asegurador\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Sede\r\n        </span>\r\n      ),\r\n      dataIndex: \"sede\",\r\n      key: \"sede\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Etiqueta Administrativa\r\n        </span>\r\n      ),\r\n      dataIndex: \"etiqAdmin\",\r\n      key: \"etiqAdmin\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Etiqueta Asistencial\r\n        </span>\r\n      ),\r\n      dataIndex: \"etiqAsis\",\r\n      key: \"etiqAsis\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Tratamiento\r\n        </span>\r\n      ),\r\n      dataIndex: \"tratamiento\",\r\n      key: \"tratamiento\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Linea de Pago\r\n        </span>\r\n      ),\r\n      dataIndex: \"lineaPago\",\r\n      key: \"lineaPago\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Requerimiento Especialidad\r\n        </span>\r\n      ),\r\n      dataIndex: \"reqeEspecialidad\",\r\n      key: \"reqeEspecialidad\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Ejecutado Especialidad\r\n        </span>\r\n      ),\r\n      dataIndex: \"ejecEspecialidad\",\r\n      key: \"ejecEspecialidad\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Agendamiento Especialidad\r\n        </span>\r\n      ),\r\n      dataIndex: \"agenEspecialidad\",\r\n      key: \"agenEspecialidad\",\r\n      render: (text) => moment(text).format(\"DD/MM/YYYY\"),\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Total Especialidad\r\n        </span>\r\n      ),\r\n      dataIndex: \"totEspecialidad\",\r\n      key: \"totEspecialidad\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Cumpliento Especialidad\r\n        </span>\r\n      ),\r\n      dataIndex: \"cumpEspecialidad\",\r\n      key: \"cumpEspecialidad\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Cantidad Seguimientos Admin\r\n        </span>\r\n      ),\r\n      dataIndex: \"cantSeguimientos\",\r\n      key: \"cantSeguimientos\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Cumplimiento Contrato\r\n        </span>\r\n      ),\r\n      dataIndex: \"cumpContrato\",\r\n      key: \"cumpContrato\",\r\n    },\r\n    {\r\n      title: (\r\n        <span style={{ backgroundColor: \"#184F9D\", color: \"#fff\" }}>\r\n          Porcentaje Cumplimiento\r\n        </span>\r\n      ),\r\n      dataIndex: \"porcCumplimiento\",\r\n      key: \"porcCumplimiento\",\r\n    }\r\n  ];\r\n\r\n  const downloadExcel = () => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const ws = XLSX.utils.json_to_sheet(data);\r\n    const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n\r\n    const date = new Date();\r\n\r\n    const stringDate = date.getDay() +'/'+ (date.getMonth()+1) +\"/\"+ date.getFullYear();\r\n\r\n    const excelFile = new Blob([excelBuffer], { type: fileType });\r\n    saveAs(excelFile, `Informe Cumplimiento Frecuencias-${stringDate}` + fileExtension);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"gx-profile-banner\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          padding: \"32px 32px 70px\",\r\n        }}\r\n      >\r\n        <div className=\"gx-profile-container\">\r\n          <div\r\n            className=\"gx-profile-banner-top\"\r\n            style={{ justifyContent: \"space-between\", marginBottom: \"10px\" }}\r\n          >\r\n            <Button onClick={downloadExcel} \r\n            style={{ backgroundColor: \"#484d55\", color: \"#FFF\" }}> \r\n            <CloudDownloadOutlined />             \r\n              Descargar Excel\r\n            </Button>\r\n\r\n            <Button onClick={onSubmit}>    \r\n            <ReloadOutlined />          \r\n              Actualizar\r\n            </Button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <Card style={{ zIndex: 2 }}>\r\n        <Table\r\n          columns={columns}\r\n          loading={loading}\r\n          dataSource={data}\r\n          scroll={{ x: 1300 }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReportCumpFrecuencias;\r\n"],"sourceRoot":""}