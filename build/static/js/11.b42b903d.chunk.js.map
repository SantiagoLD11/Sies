{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/EditarPaciente.jsx","views/CreatePatient.jsx","views/PatientInformation.jsx"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","EditarPaciente","_ref","setIsActualizar","open","setOpen","idPaciente","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_Form$useForm","Form","useForm","form","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","_useState7","_useState8","listaCiudades","setListaCiudades","_useState9","Direccion","Celular","Tel","Ciudad","idCiudad","Email","_useState10","paciente","setPaciente","close","useEffect","getPaciente","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","infoPaciente","wrap","_context","prev","listCiudades","sent","getInfoGeneralPacient","stop","apply","arguments","onFinish","_ref3","_callee2","values","_error$response","_error$response$data","_context2","console","log","updatePatient","type","content","t0","response","data","_x","_jsxs","_Fragment","children","_jsx","Modal","title","onCancel","onOk","footer","Button","onClick","htmlType","style","backgroundColor","color","id","name","autoComplete","layout","fields","className","Item","label","rules","required","Input","pattern","Select","showSearch","optionFilterProp","filterOption","input","option","_option$label","toLowerCase","includes","options","CreatePatient","dataIntegrarPaciente","numero_doc","getDatagrid","cargando","_notification$useNoti","notification","useNotification","_notification$useNoti2","notificationApi","history","useHistory","typeDocs","setTypeDoc","tipo_documento","numero_documento","setValues","onSubmit","_values","createPatient","description","push","pathname","concat","state","getDocuments","resp","list_documents_integ_patient","_callee3","TipoValue","_iterator","_step","doc","json","_error$response2","_error$response2$data","_context3","Integrar","Tipo_Documento","abrupt","finish","Numero_Documento","filtros","t1","submit","colon","placeholder","onChange","_ref4","target","_objectSpread","_defineProperty","PatientInformation","disabledInput","setDisabledInput","disabledButton","setDisabledButton","nombre","setNombre","tipoDoc","setTipoDoc","_useState11","undefined","_useState12","numeroDoc","setNumeroDoc","_useState13","_useState14","setData","_useState15","_useState16","openModal","setOpenModal","_useState17","_useState18","_useState19","_useState20","openModalPatient","setOpenModalPatient","_useState21","_useState22","_useState23","_useState24","setDataIntegrarPaciente","_values$nombre","_values$nombre2","_values$nombre3","_resp","tipo_doc","Swal","fire","icon","text","list_patients","refact","TipoLabel","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","isConfirmed","hideLoadingModal","_x2","on_change","Var","getFieldValue","listDocumentsPatients","columns","dataIndex","key","render","align","fixed","width","view","_callee4","registros","_context4","showLoadingModal","TriggerUpdatePatient","getConsulta","detail","cursor","handlePaste","event","pastedText","clipboardData","getData","setTimeout","Spin","spinning","Card","headStyle","background","boxShadow","fontWeight","fontSize","actions","resetFields","disabled","onPaste","Space","Compact","block","test","hidden","Table","dataSource","scroll","x"],"mappings":"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","file":"static/js/11.b42b903d.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { Modal, Button, Form, Input, message, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getInfoGeneralPacient,\r\n  updatePatient,\r\n  listCiudades,\r\n} from \"../appRedux/services\";\r\n\r\nexport const EditarPaciente = ({\r\n  setIsActualizar,\r\n  open,\r\n  setOpen,\r\n  idPaciente,\r\n}) => {\r\n  const [field1Value, setField1Value] = useState(\"\");\r\n  const [field2Value, setField2Value] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [listaCiudades, setListaCiudades] = useState([]);\r\n  const [paciente, setPaciente] = useState({\r\n    Direccion: \"\",\r\n    Celular: \"\",\r\n    Tel: \"\",\r\n    Ciudad: \"\",\r\n    idCiudad:\"\",\r\n    Email: \"\",\r\n  });\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (idPaciente && open) {\r\n      getPaciente();\r\n    }\r\n  }, [open]);\r\n\r\n  const getPaciente = async () => {\r\n    const listaCiudades = await listCiudades();\r\n    setListaCiudades(listaCiudades);\r\n    const infoPaciente = await getInfoGeneralPacient(idPaciente);\r\n    setPaciente(infoPaciente);\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    setLoading(true);\r\n\r\n    try {\r\n      await updatePatient(idPaciente, values);\r\n      await messageApi.open({\r\n        type: \"success\",\r\n        content: \"Se ha actualizado el paciente correctamente.\",\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await messageApi.open({\r\n        type: \"error\",\r\n        content: error.response?.data?.message,\r\n      });\r\n    }\r\n    setLoading(false);\r\n    setIsActualizar(true);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    const regex = /^[0-9]*$/;\r\n    if (regex.test(e.target.value)) {\r\n      e.target.value = \"\";\r\n    }\r\n    if (field === \"field1\") {\r\n      setField1Value(e.target.value);\r\n    } else if (field === \"field2\") {\r\n      setField2Value(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Editar Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        onOk={onFinish}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-actualizar\"\r\n            htmlType=\"submit\"\r\n            form=\"basic\"\r\n            loading={loading}\r\n            style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n          >\r\n            Guardar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={form}\r\n          id=\"basic\"\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          // onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          layout=\"vertical\"\r\n          fields={[\r\n            {\r\n              name: [\"direccion\"],\r\n              value: paciente?.Direccion || \"\",\r\n            },\r\n            {\r\n              name: [\"celular\"],\r\n              value: paciente?.Celular || \"\",\r\n            },\r\n            {\r\n              name: [\"tel\"],\r\n              value: paciente?.Tel || \"\",\r\n            },\r\n            {\r\n              name: [\"ciudad\"],\r\n              value: paciente?.idCiudad || \"\",\r\n            },\r\n            {\r\n              name: [\"email\"],\r\n              value: paciente?.Email || \"\",\r\n            },\r\n          ]}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Dirección\"\r\n                name=\"direccion\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Celular\"\r\n                name=\"celular\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field1\")}\r\n                  //value={field1Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Teléfono\"\r\n                name=\"tel\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field2\")}\r\n                  //value={field2Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Ciudad\"\r\n                name=\"ciudad\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  name=\"ciudad\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={listaCiudades}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa un correo electrónico válido\",\r\n                    type: \"email\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"email\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Button, Form, Input, notification, Modal, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createPatient,\r\n  list_documents_integ_patient,\r\n} from \"../appRedux/services\";\r\n\r\nconst CreatePatient = ({\r\n  open,\r\n  setOpen,\r\n  numero_doc,\r\n  dataIntegrarPaciente,\r\n  getDatagrid,\r\n  cargando,\r\n}) => {\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const close = () => setOpen(false);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [values, setValues] = useState({\r\n    tipo_documento: \"\",\r\n    numero_documento: \"\",\r\n  });\r\n\r\n  const onSubmit = async (_values) => {\r\n    setLoading(true);\r\n    try {\r\n      await createPatient(_values);\r\n      await notificationApi.open({\r\n        type: \"success\",\r\n        description: \"Paciente integrado correctamente\",\r\n      });\r\n      history.push({\r\n        pathname: `/detail-patient/${_values?.numero_documento}`,\r\n        state: { type: \"numero_document\" },\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await notificationApi.open({\r\n        type: \"error\",\r\n        description: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await list_documents_integ_patient();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  const on_change = ({ target }) => {\r\n    console.log(\"target\", target);\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let TipoValue;\r\n    if (dataIntegrarPaciente.Integrar) {\r\n      for (let doc of typeDocs) {\r\n        if (doc.label === dataIntegrarPaciente?.Tipo_Documento) {\r\n          TipoValue = doc.value;\r\n          break;\r\n        }\r\n      }\r\n      const json = {\r\n        tipo_documento: TipoValue,\r\n        numero_documento: dataIntegrarPaciente?.Numero_Documento,\r\n      };\r\n      try {\r\n        await createPatient(json);\r\n        await notificationApi.open({\r\n          type: \"success\",\r\n          description: \"Paciente integrado correctamente\",\r\n        });\r\n        getDatagrid(dataIntegrarPaciente?.filtros);\r\n      } catch (error) {\r\n        await notificationApi.open({\r\n          type: \"error\",\r\n          description: error.response?.data?.message,\r\n        });\r\n        cargando(false);\r\n      }\r\n    }\r\n  }, [dataIntegrarPaciente]);\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Crear Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-integrar\"\r\n            loading={loading}\r\n            onClick={() => form.submit()}\r\n          >\r\n            Integrar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"wrap\"\r\n          layout=\"vertical\"\r\n          colon={false}\r\n          onFinish={onSubmit}\r\n          form={form}\r\n          autoComplete=\"off\"\r\n          // fields={[\r\n          //   {\r\n          //     name: [\"numero_documento\"],\r\n          //     value: numero_doc || \"\",\r\n          //   },\r\n          // ]}\r\n        >\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Tipo de documento\"\r\n                name=\"tipo_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  className=\"w-100\"\r\n                  showSearch\r\n                  placeholder=\"Selecciona tipo de documento\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={typeDocs}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Número de documento\"\r\n                name=\"numero_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input onChange={on_change} name=\"numero_documento\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePatient;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  list_patients,\r\n  TriggerUpdatePatient,\r\n  listDocumentsPatients,\r\n  getConsulta,\r\n  actualizarRegistroNovedadInformado,\r\n  showLoadingModal,\r\n  hideLoadingModal,\r\n} from \"../appRedux/services\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  notification,\r\n  Table,\r\n  Input,\r\n  Select,\r\n  Space,\r\n  Spin,\r\n} from \"antd\";\r\nimport Swal from \"sweetalert2\";\r\nimport CreatePatient from \"./CreatePatient\";\r\nimport { EditarPaciente } from \"./EditarPaciente\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PatientInformation = () => {\r\n  const [form] = Form.useForm();\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const [disabledInput, setDisabledInput] = useState(false);\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [tipoDoc, setTipoDoc] = useState(\"\");\r\n  const [numeroDoc, setNumeroDoc] = useState(undefined);\r\n  const [data, setData] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [paciente, setPaciente] = useState(null);\r\n  const [openModalPatient, setOpenModalPatient] = useState(false);\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const [dataIntegrarPaciente, setDataIntegrarPaciente] = useState({\r\n    Integrar: false,\r\n    Tipo_Documento: null,\r\n    Numero_Documento: null,\r\n    filtros: null,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    if (!values.tipo_doc && values?.nombre?.length == 0) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'El campo tipo de documento es requerido',\r\n      });\r\n      return; // Detener el envío del formulario si el campo está vacío\r\n    }\r\n  \r\n    // Verifica si el campo \"numero_doc\" está vacío\r\n    if (!values.numero_doc && values?.nombre?.length == 0) {\r\n      Swal.fire({\r\n        icon: 'error',\r\n        title: 'Oops...',\r\n        text: 'El campo número de documento es requerido',\r\n      });\r\n      return; // Detener el envío del formulario si el campo está vacío\r\n    }\r\n    if (values?.nombre?.length >= 3 && !numeroDoc) {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    } else if (numeroDoc !== undefined && nombre === \"\") {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const refact = async (values) => {\r\n    if (\r\n      values?.nombre === undefined ||\r\n      values?.nombre === \"\" ||\r\n      values?.nombre === null\r\n    ) {\r\n      let TipoLabel;\r\n      for (let doc of typeDocs) {\r\n        if (doc.value === values.tipo_doc) {\r\n          TipoLabel = doc.label;\r\n          break;\r\n        }\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: true,\r\n        Tipo_Documento: TipoLabel,\r\n        Numero_Documento: numeroDoc,\r\n        filtros: values,\r\n      });\r\n    } else {\r\n      const result = await Swal.fire({\r\n        title: \"No existen registros\",\r\n        text: \"¿Desea integrar un paciente?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: \"No\",\r\n        confirmButtonText: \"Si, integrar\",\r\n      });\r\n      if (result.isConfirmed) {\r\n        setOpenModal(true);\r\n        setLoading(false);\r\n        hideLoadingModal();\r\n      } else {\r\n        setLoading(false);\r\n        hideLoadingModal();\r\n      }\r\n    }\r\n  };\r\n\r\n  const on_change = (value) => {\r\n    const { target } = value;\r\n    setDisabledButton(false);\r\n    console.log(`Valores: ${nombre}, ${tipoDoc}, ${numeroDoc}`);\r\n    if (target?.value !== undefined && target?.value !== \"\") {\r\n      if (target.name === \"numero_doc\") {\r\n        const Var = target.value;\r\n        setNumeroDoc(Var);\r\n        setNombre(\"\");\r\n      }\r\n      if (target.name === \"nombre\") {\r\n        const Var = target.value;\r\n        onSubmit({ nombre: Var });\r\n        setNombre(Var);\r\n        setNumeroDoc(\"\");\r\n        setTipoDoc(\"\");\r\n       // form.resetFields(['numero_doc', 'tipo_doc']);\r\n      }\r\n      if (target.name === \"tipo_doc\") {\r\n        const Var = target.value;\r\n        setTipoDoc(form.getFieldValue(\"tipo_doc\"));\r\n        setNombre(\"\");\r\n        setNumeroDoc(form.getFieldValue(\"numero_doc\"));\r\n      }\r\n      setDisabledInput({ name: target.name });\r\n      if (\r\n        (tipoDoc !== \"\" && numeroDoc !== undefined && nombre === \"\") ||\r\n        (tipoDoc === \"\" && numeroDoc === undefined && nombre !== \"\")\r\n      ) {\r\n        setDisabledButton(false);\r\n      } else {\r\n        setDisabledButton(true);\r\n      }\r\n    } else {\r\n      setNumeroDoc(\"\");\r\n      setDisabledInput(false);\r\n      setDisabledButton(true);\r\n    }\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    const regex = /^[0-9]{0,20}$|^$/;\r\n    if (regex.test(e.target.value)) {\r\n      on_change(e);\r\n    }\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await listDocumentsPatients();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"nombres\",\r\n      key: \"nombres\",\r\n      render :(text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"apellidos\",\r\n      key: \"apellidos\",\r\n      render :(text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Tipo de documento\",\r\n      dataIndex: \"tipo_documento\",\r\n      key: \"tipo_documento\",\r\n    },\r\n    {\r\n      title: \"Número de documento\",\r\n      dataIndex: \"numero_documento\",\r\n      key: \"numero_documento\",\r\n      render :(text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Celular\",\r\n      key: \"celular\",\r\n      dataIndex: \"celular\",\r\n    },\r\n    {\r\n      title: \"Tipo Afiliación\",\r\n      dataIndex: \"tipoAfiliacion\",\r\n      key: \"tipoAfiliacion\",\r\n    },\r\n    {\r\n      title: \"Nivel Afiliación\",\r\n      dataIndex: \"nivelAfiliacion\",\r\n      key: \"nivelAfiliacion\",\r\n    },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      children: [\r\n        {\r\n          title: \"Ver\",\r\n          key: \"ver\",\r\n          fixed: \"right\",\r\n          width: \"5%\",\r\n          render: (data) => {\r\n            const view = async () => {\r\n              showLoadingModal();\r\n              setLoading(true);\r\n              try {\r\n                await TriggerUpdatePatient(data?.numero_documento);\r\n                notificationApi.open({\r\n                  type: \"success\",\r\n                  content: \"Actualizado correctamente\",\r\n                });\r\n                const registros = await getConsulta(data?.numero_documento);\r\n                setLoading(false);\r\n                hideLoadingModal();\r\n                history.push({\r\n                  pathname: `/detail-patient/${data?.id}`,\r\n                  state: { detail: registros },\r\n                });\r\n              } catch (error) {\r\n                notificationApi.open({\r\n                  type: \"error\",\r\n                  content: error.response?.data?.message || \"error\",\r\n                });\r\n                setLoading(false);\r\n                hideLoadingModal();\r\n                history.push(`/detail-patient/${data?.id}`);\r\n              }\r\n            };\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-view\"\r\n                onClick={view}\r\n              />\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Editar\",\r\n          key: \"editar\",\r\n          dataIndex: \"id\",\r\n          fixed: \"right\",\r\n          width: \"6%\",\r\n          render: (id) => {\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-edit\"\r\n                onClick={() => {\r\n                  setOpenModalPatient(true);\r\n                  setPaciente(id);\r\n                }}\r\n              />\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handlePaste = (event) => {\r\n    const pastedText = event.clipboardData.getData(\"text\");\r\n    setTimeout(() => {\r\n      if (pastedText != null || pastedText != \"\" || pastedText != undefined) {\r\n        setDisabledButton(false);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spin spinning={loading}>\r\n        {contextHolder}\r\n        <CreatePatient\r\n          open={openModal}\r\n          setOpen={setOpenModal}\r\n          numero_doc={numeroDoc}\r\n          getDatagrid={onSubmit}\r\n          dataIntegrarPaciente={dataIntegrarPaciente}\r\n          cargando={setLoading}\r\n        />\r\n        <EditarPaciente\r\n          open={openModalPatient}\r\n          setOpen={setOpenModalPatient}\r\n          idPaciente={paciente}\r\n        />\r\n        <Card\r\n          headStyle={{ background: \"#184F9D\" }}\r\n          style={{boxShadow: '1px 4px 8px 0 rgba(0,0,0,0.2)'}}\r\n          title={\r\n            <span\r\n              style={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"#FFF\" }}\r\n            >\r\n              Buscar Paciente\r\n            </span>\r\n          }\r\n          actions={[\r\n            <Button\r\n              key=\"Limpiar\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => {\r\n                form.resetFields();\r\n                setDisabledInput(false);\r\n                setNumeroDoc(null);\r\n                setData([]);\r\n                setDisabledButton(true);\r\n                setTipoDoc(\"\");\r\n              }}\r\n            >\r\n              Limpiar Filtros\r\n            </Button>,\r\n            <Button\r\n              key=\"Consultar\"\r\n              style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => form.submit()}\r\n              disabled={disabledButton}\r\n              loading={loading}\r\n            >\r\n              Consultar\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form\r\n            name=\"wrap\"\r\n            layout=\"vertical\"\r\n            colon={false}\r\n            onFinish={onSubmit}\r\n            form={form}\r\n            autoComplete=\"off\"\r\n          >\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Form.Item\r\n                  label=\"Nombre completo\"\r\n                  name=\"nombre\"\r\n                  // rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n                >\r\n                  <Input\r\n                    onChange={on_change}\r\n                    //value={nombre}\r\n                    name=\"nombre\"\r\n                    disabled={\r\n                      disabledInput?.name === \"numero_doc\" ||\r\n                      disabledInput?.name === \"tipo_doc\"\r\n                    }\r\n                    onPaste={(event) => {\r\n                      handlePaste(event);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Space.Compact block>\r\n                  <Form.Item\r\n                    label=\"Tipo\"\r\n                    name=\"tipo_doc\"\r\n                    style={{ width: \"15%\" }}\r\n                    rules={[\r\n                      { required: !form.getFieldValue(\"numero_doc\"), message: '¡Por favor, selecciona el tipo de documento!' },\r\n                    ]}\r\n                  >\r\n                    <Select\r\n                      onChange={(value) => {\r\n                        on_change({\r\n                          target: { name: \"tipo_doc\", value: value },\r\n                        });\r\n                      }}\r\n                      name=\"tipo_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      options={typeDocs}\r\n                      value={tipoDoc}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Número de documento\"\r\n                    name=\"numero_doc\"\r\n                    style={{ width: \"85%\" }}\r\n                    rules={[\r\n                      { required: !form.getFieldValue(\"tipo_doc\"), message: '¡Por favor, ingresa el número de documento!' },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                      onPaste={(event) => {\r\n                        handlePaste(event);\r\n                      }}\r\n                    />\r\n                    <input\r\n                      hidden\r\n                      // onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      //disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                    />\r\n                  </Form.Item>\r\n                </Space.Compact>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n        {data.length > 0 && (\r\n          <Card>\r\n            <Table\r\n              columns={columns}\r\n              loading={loading}\r\n              dataSource={data}\r\n              scroll={{ x: 1300 }}\r\n            />\r\n          </Card>\r\n        )}\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientInformation;\r\n"],"sourceRoot":""}