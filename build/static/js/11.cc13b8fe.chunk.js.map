{"version":3,"sources":["views/EditarPaciente.jsx","views/CreatePatient.jsx","views/PatientInformation.jsx"],"names":["EditarPaciente","_ref","setIsActualizar","open","setOpen","idPaciente","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_Form$useForm","Form","useForm","form","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","_useState7","_useState8","listaCiudades","setListaCiudades","_useState9","Direccion","Celular","Tel","Ciudad","Email","_useState10","paciente","setPaciente","close","useEffect","getPaciente","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","infoPaciente","wrap","_context","prev","next","getInfoGeneralPacient","sent","listCiudades","stop","apply","arguments","onFinish","_ref3","_callee2","values","_error$response","_error$response$data","_context2","console","log","updatePatient","type","content","t0","response","data","_x","_jsxs","_Fragment","children","_jsx","Modal","title","onCancel","onOk","footer","Button","onClick","htmlType","style","backgroundColor","color","disabled","getFieldsError","filter","_ref4","errors","length","id","name","autoComplete","layout","fields","value","className","Item","label","rules","required","Input","pattern","Select","showSearch","optionFilterProp","filterOption","input","option","_option$label","toLowerCase","includes","options","CreatePatient","dataIntegrarPaciente","numero_doc","getDatagrid","cargando","_notification$useNoti","notification","useNotification","_notification$useNoti2","notificationApi","history","useHistory","typeDocs","setTypeDoc","tipo_documento","numero_documento","setValues","onSubmit","_values","createPatient","description","push","pathname","concat","state","getDocuments","resp","list_documents_integ_patient","_callee3","TipoValue","_iterator","_step","doc","json","_error$response2","_error$response2$data","_context3","Integrar","_createForOfIteratorHelper","s","n","done","Tipo_Documento","abrupt","e","f","finish","Numero_Documento","filtros","t1","submit","colon","placeholder","onChange","target","_objectSpread","_defineProperty","PatientInformation","disabledInput","setDisabledInput","disabledButton","setDisabledButton","nombre","setNombre","tipoDoc","setTipoDoc","_useState11","undefined","_useState12","numeroDoc","setNumeroDoc","_useState13","_useState14","setData","_useState15","_useState16","openModal","setOpenModal","_useState17","_useState18","_useState19","_useState20","openModalPatient","setOpenModalPatient","_useState21","_useState22","_useState23","_useState24","setDataIntegrarPaciente","_values$nombre","_resp","list_patients","refact","TipoLabel","tipo_doc","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","isConfirmed","_x2","on_change","Var","listDocumentsPatients","columns","dataIndex","key","align","fixed","width","render","view","_callee4","registros","_context4","TriggerUpdatePatient","getConsulta","detail","cursor","handlePaste","event","pastedText","clipboardData","getData","setTimeout","Spin","spinning","Card","headStyle","background","fontWeight","fontSize","actions","resetFields","onPaste","Space","Compact","block","test","hidden","Table","dataSource","scroll","x"],"mappings":"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","file":"static/js/11.cc13b8fe.chunk.js","sourcesContent":["import { Modal, Button, Form, Input, message, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getInfoGeneralPacient,\r\n  updatePatient,\r\n  listCiudades,\r\n} from \"../appRedux/services\";\r\n\r\nexport const EditarPaciente = ({\r\n  setIsActualizar,\r\n  open,\r\n  setOpen,\r\n  idPaciente,\r\n}) => {\r\n  const [field1Value, setField1Value] = useState(\"\");\r\n  const [field2Value, setField2Value] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [listaCiudades, setListaCiudades] = useState([]);\r\n  const [paciente, setPaciente] = useState({\r\n    Direccion: \"\",\r\n    Celular: \"\",\r\n    Tel: \"\",\r\n    Ciudad: \"\",\r\n    Email: \"\",\r\n  });\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (idPaciente && open) {\r\n      getPaciente();\r\n    }\r\n  }, [open]);\r\n\r\n  const getPaciente = async () => {\r\n    const infoPaciente = await getInfoGeneralPacient(idPaciente);\r\n    setPaciente(infoPaciente);\r\n    const listaCiudades = await listCiudades();\r\n    setListaCiudades(listaCiudades);\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    setLoading(true);\r\n\r\n    try {\r\n      await updatePatient(idPaciente, values);\r\n      await messageApi.open({\r\n        type: \"success\",\r\n        content: \"Paciente integrado correctamente\",\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await messageApi.open({\r\n        type: \"error\",\r\n        content: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    // const resp = await updatePatient(idPaciente, values);\r\n    // console.log(\"actualizar paciente: \", resp);\r\n    // if (resp?.status === \"fail\") {\r\n    //   console.log(\"Actualizar: \", resp);\r\n    //   await messageApi.open({\r\n    //     type: \"error\",\r\n    //     content: resp?.message || \"error\",\r\n    //   });\r\n    // }\r\n    // if (resp?.status === \"ok\") {\r\n    //   await messageApi.open({\r\n    //     type: \"success\",\r\n    //     content: \"Se ha editado correctamente el paciente\",\r\n    //   });\r\n    // }\r\n    setLoading(false);\r\n    setIsActualizar(true);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    const regex = /^[0-9]*$/;\r\n    if (regex.test(e.target.value)) {\r\n      e.target.value = \"\";\r\n    }\r\n    if (field === \"field1\") {\r\n      setField1Value(e.target.value);\r\n    } else if (field === \"field2\") {\r\n      setField2Value(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Editar Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        onOk={onFinish}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-actualizar\"\r\n            htmlType=\"submit\"\r\n            form=\"basic\"\r\n            loading={loading}\r\n            style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n            // onClick={() => onFinish}\r\n            disabled={\r\n              //form.isFieldsTouched(false) ||\r\n              form.getFieldsError().filter(({ errors }) => errors.length)\r\n                .length > 0\r\n            }\r\n          >\r\n            Actualizar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={form}\r\n          id=\"basic\"\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          // onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          layout=\"vertical\"\r\n          fields={[\r\n            {\r\n              name: [\"direccion\"],\r\n              value: paciente?.Direccion || \"\",\r\n            },\r\n            {\r\n              name: [\"celular\"],\r\n              value: paciente?.Celular || \"\",\r\n            },\r\n            {\r\n              name: [\"tel\"],\r\n              value: paciente?.Tel || \"\",\r\n            },\r\n            {\r\n              name: [\"ciudad\"],\r\n              value: paciente?.Ciudad || \"\",\r\n            },\r\n            {\r\n              name: [\"email\"],\r\n              value: paciente?.Email || \"\",\r\n            },\r\n          ]}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Dirección\"\r\n                name=\"direccion\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Celular\"\r\n                name=\"celular\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field1\")}\r\n                  //value={field1Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Teléfono\"\r\n                name=\"tel\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field2\")}\r\n                  //value={field2Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Ciudad\"\r\n                name=\"ciudad\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  name=\"ciudad\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={listaCiudades}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa un correo electrónico válido\",\r\n                    type: \"email\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"email\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Button, Form, Input, notification, Modal, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createPatient,\r\n  list_documents_integ_patient,\r\n} from \"../appRedux/services\";\r\n\r\nconst CreatePatient = ({\r\n  open,\r\n  setOpen,\r\n  numero_doc,\r\n  dataIntegrarPaciente,\r\n  getDatagrid,\r\n  cargando,\r\n}) => {\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const close = () => setOpen(false);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [values, setValues] = useState({\r\n    tipo_documento: \"\",\r\n    numero_documento: \"\",\r\n  });\r\n\r\n  const onSubmit = async (_values) => {\r\n    setLoading(true);\r\n    try {\r\n      await createPatient(_values);\r\n      await notificationApi.open({\r\n        type: \"success\",\r\n        description: \"Paciente integrado correctamente\",\r\n      });\r\n      history.push({\r\n        pathname: `/detail-patient/${_values?.numero_documento}`,\r\n        state: { type: \"numero_document\" },\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await notificationApi.open({\r\n        type: \"error\",\r\n        description: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await list_documents_integ_patient();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  const on_change = ({ target }) => {\r\n    console.log(\"target\", target);\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let TipoValue;\r\n    if (dataIntegrarPaciente.Integrar) {\r\n      for (let doc of typeDocs) {\r\n        if (doc.label === dataIntegrarPaciente?.Tipo_Documento) {\r\n          TipoValue = doc.value;\r\n          break;\r\n        }\r\n      }\r\n      const json = {\r\n        tipo_documento: TipoValue,\r\n        numero_documento: dataIntegrarPaciente?.Numero_Documento,\r\n      };\r\n      try {\r\n        await createPatient(json);\r\n        await notificationApi.open({\r\n          type: \"success\",\r\n          description: \"Paciente integrado correctamente\",\r\n        });\r\n        getDatagrid(dataIntegrarPaciente?.filtros);\r\n      } catch (error) {\r\n        await notificationApi.open({\r\n          type: \"error\",\r\n          description: error.response?.data?.message,\r\n        });\r\n        cargando(false);\r\n      }\r\n    }\r\n  }, [dataIntegrarPaciente]);\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Crear Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-integrar\"\r\n            loading={loading}\r\n            onClick={() => form.submit()}\r\n          >\r\n            Integrar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"wrap\"\r\n          layout=\"vertical\"\r\n          colon={false}\r\n          onFinish={onSubmit}\r\n          form={form}\r\n          autoComplete=\"off\"\r\n          // fields={[\r\n          //   {\r\n          //     name: [\"numero_documento\"],\r\n          //     value: numero_doc || \"\",\r\n          //   },\r\n          // ]}\r\n        >\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Tipo de documento\"\r\n                name=\"tipo_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  className=\"w-100\"\r\n                  showSearch\r\n                  placeholder=\"Selecciona tipo de documento\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={typeDocs}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Número de documento\"\r\n                name=\"numero_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input onChange={on_change} name=\"numero_documento\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePatient;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  list_patients,\r\n  TriggerUpdatePatient,\r\n  listDocumentsPatients,\r\n  getConsulta,\r\n  actualizarRegistroNovedadInformado,\r\n} from \"../appRedux/services\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  notification,\r\n  Table,\r\n  Input,\r\n  Select,\r\n  Space,\r\n  Spin,\r\n} from \"antd\";\r\nimport Swal from \"sweetalert2\";\r\nimport CreatePatient from \"./CreatePatient\";\r\nimport { EditarPaciente } from \"./EditarPaciente\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PatientInformation = () => {\r\n  const [form] = Form.useForm();\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const [disabledInput, setDisabledInput] = useState(false);\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [tipoDoc, setTipoDoc] = useState(\"\");\r\n  const [numeroDoc, setNumeroDoc] = useState(undefined);\r\n  const [data, setData] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [paciente, setPaciente] = useState(null);\r\n  const [openModalPatient, setOpenModalPatient] = useState(false);\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const [dataIntegrarPaciente, setDataIntegrarPaciente] = useState({\r\n    Integrar: false,\r\n    Tipo_Documento: null,\r\n    Numero_Documento: null,\r\n    filtros: null,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    if (values?.nombre?.length >= 3 && numeroDoc === undefined) {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    } else if (numeroDoc !== undefined && nombre === \"\") {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const refact = async (values) => {\r\n    if (\r\n      values?.nombre === undefined ||\r\n      values?.nombre === \"\" ||\r\n      values?.nombre === null\r\n    ) {\r\n      let TipoLabel;\r\n      for (let doc of typeDocs) {\r\n        if (doc.value === values.tipo_doc) {\r\n          TipoLabel = doc.label;\r\n          break;\r\n        }\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: true,\r\n        Tipo_Documento: TipoLabel,\r\n        Numero_Documento: numeroDoc,\r\n        filtros: values,\r\n      });\r\n    } else {\r\n      const result = await Swal.fire({\r\n        title: \"No existen registros\",\r\n        text: \"¿Desea integrar un paciente?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: \"No\",\r\n        confirmButtonText: \"Si, integrar\",\r\n      });\r\n      if (result.isConfirmed) {\r\n        setOpenModal(true);\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const on_change = (value) => {\r\n    const { target } = value;\r\n    setDisabledButton(false);\r\n    console.log(`Valores: ${nombre}, ${tipoDoc}, ${numeroDoc}`);\r\n    if (target?.value !== undefined && target?.value !== \"\") {\r\n      if (target.name === \"numero_doc\") {\r\n        const Var = target.value;\r\n        setNumeroDoc(Var);\r\n        setNombre(\"\");\r\n      }\r\n      if (target.name === \"nombre\") {\r\n        const Var = target.value;\r\n        onSubmit({ nombre: Var });\r\n        setNombre(Var);\r\n        setNumeroDoc(undefined);\r\n        setTipoDoc(\"\");\r\n      }\r\n      if (target.name === \"tipo_doc\") {\r\n        const Var = target.value;\r\n        setTipoDoc(Var);\r\n        setNombre(\"\");\r\n        setNumeroDoc(undefined);\r\n      }\r\n      setDisabledInput({ name: target.name });\r\n      if (\r\n        (tipoDoc !== \"\" && numeroDoc !== undefined && nombre === \"\") ||\r\n        (tipoDoc === \"\" && numeroDoc === undefined && nombre !== \"\")\r\n      ) {\r\n        setDisabledButton(false);\r\n      } else {\r\n        setDisabledButton(true);\r\n      }\r\n    } else {\r\n      setNumeroDoc(undefined);\r\n      setDisabledInput(false);\r\n      setDisabledButton(true);\r\n    }\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    const regex = /^[0-9]{0,20}$|^$/;\r\n    if (regex.test(e.target.value)) {\r\n      on_change(e);\r\n    }\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await listDocumentsPatients();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"nombres\",\r\n      key: \"nombres\",\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"apellidos\",\r\n      key: \"apellidos\",\r\n    },\r\n    {\r\n      title: \"Tipo de documento\",\r\n      dataIndex: \"tipo_documento\",\r\n      key: \"tipo_documento\",\r\n    },\r\n    {\r\n      title: \"Número de documento\",\r\n      dataIndex: \"numero_documento\",\r\n      key: \"numero_documento\",\r\n    },\r\n    {\r\n      title: \"Celular\",\r\n      key: \"celular\",\r\n      dataIndex: \"celular\",\r\n    },\r\n    {\r\n      title: \"Tipo Afiliación\",\r\n      dataIndex: \"tipoAfiliacion\",\r\n      key: \"tipoAfiliacion\",\r\n    },\r\n    {\r\n      title: \"Nivel Afiliación\",\r\n      dataIndex: \"nivelAfiliacion\",\r\n      key: \"nivelAfiliacion\",\r\n    },\r\n    // {\r\n    //   title: \"ID\",\r\n    //   dataIndex: \"id\",\r\n    //   key: \"id\",\r\n    // },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      children: [\r\n        {\r\n          title: \"Ver\",\r\n          key: \"ver\",\r\n          fixed: \"right\",\r\n          width: \"5%\",\r\n          render: (data) => {\r\n            const view = async () => {\r\n              setLoading(true);\r\n              try {\r\n                await TriggerUpdatePatient(data?.numero_documento);\r\n                notificationApi.open({\r\n                  type: \"success\",\r\n                  content: \"Actualizado correctamente\",\r\n                });\r\n                const registros = await getConsulta(data?.numero_documento);\r\n                setLoading(false);\r\n                history.push({\r\n                  pathname: `/detail-patient/${data?.id}`,\r\n                  state: { detail: registros },\r\n                });\r\n              } catch (error) {\r\n                notificationApi.open({\r\n                  type: \"error\",\r\n                  content: error.response?.data?.message || \"error\",\r\n                });\r\n                setLoading(false);\r\n                history.push(`/detail-patient/${data?.id}`);\r\n              }\r\n            };\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-view\"\r\n                onClick={view}\r\n              />\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Editar\",\r\n          key: \"editar\",\r\n          dataIndex: \"id\",\r\n          fixed: \"right\",\r\n          width: \"6%\",\r\n          render: (id) => {\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-edit\"\r\n                onClick={() => {\r\n                  setOpenModalPatient(true);\r\n                  setPaciente(id);\r\n                }}\r\n              />\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handlePaste = (event) => {\r\n    const pastedText = event.clipboardData.getData(\"text\");\r\n    setTimeout(() => {\r\n      if (pastedText != null || pastedText != \"\" || pastedText != undefined) {\r\n        setDisabledButton(false);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spin spinning={loading}>\r\n        {contextHolder}\r\n        <CreatePatient\r\n          open={openModal}\r\n          setOpen={setOpenModal}\r\n          numero_doc={numeroDoc}\r\n          getDatagrid={onSubmit}\r\n          dataIntegrarPaciente={dataIntegrarPaciente}\r\n          cargando={setLoading}\r\n        />\r\n        <EditarPaciente\r\n          open={openModalPatient}\r\n          setOpen={setOpenModalPatient}\r\n          idPaciente={paciente}\r\n        />\r\n        <Card\r\n          headStyle={{ background: \"#184F9D\" }}\r\n          title={\r\n            <span\r\n              style={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"#FFF\" }}\r\n            >\r\n              Buscar Paciente\r\n            </span>\r\n          }\r\n          // extra={\r\n          //   <Button\r\n          //     style={{ color: \"#038fde\" }}\r\n          //     onClick={() => setOpenModal(true)}\r\n          //   >\r\n          //     Integrar\r\n          //   </Button>\r\n          // }\r\n          actions={[\r\n            <Button\r\n              key=\"Limpiar\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => {\r\n                form.resetFields();\r\n                setDisabledInput(false);\r\n                setNumeroDoc(null);\r\n                setData([]);\r\n                setDisabledButton(true);\r\n                setTipoDoc(\"\");\r\n              }}\r\n            >\r\n              Limpiar Filtros\r\n            </Button>,\r\n            <Button\r\n              key=\"Consultar\"\r\n              style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => form.submit()}\r\n              disabled={disabledButton}\r\n              loading={loading}\r\n            >\r\n              Consultar\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form\r\n            name=\"wrap\"\r\n            layout=\"vertical\"\r\n            colon={false}\r\n            onFinish={onSubmit}\r\n            form={form}\r\n            autoComplete=\"off\"\r\n          >\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Form.Item\r\n                  label=\"Nombre completo\"\r\n                  name=\"nombre\"\r\n                  // rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n                >\r\n                  <Input\r\n                    onChange={on_change}\r\n                    //value={nombre}\r\n                    name=\"nombre\"\r\n                    disabled={\r\n                      disabledInput?.name === \"numero_doc\" ||\r\n                      disabledInput?.name === \"tipo_doc\"\r\n                    }\r\n                    onPaste={(event) => {\r\n                      handlePaste(event);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Space.Compact block>\r\n                  <Form.Item\r\n                    label=\"Tipo\"\r\n                    name=\"tipo_doc\"\r\n                    style={{ width: \"15%\" }}\r\n                  >\r\n                    <Select\r\n                      onChange={(value) => {\r\n                        on_change({\r\n                          target: { name: \"tipo_doc\", value: value },\r\n                        });\r\n                      }}\r\n                      name=\"tipo_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      options={typeDocs}\r\n                      value={tipoDoc}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Número de documento\"\r\n                    name=\"numero_doc\"\r\n                    style={{ width: \"85%\" }}\r\n                  >\r\n                    <Input\r\n                      onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                      onPaste={(event) => {\r\n                        handlePaste(event);\r\n                      }}\r\n                    />\r\n                    <input\r\n                      hidden\r\n                      // onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      //disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                    />\r\n                  </Form.Item>\r\n                </Space.Compact>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n        {data.length > 0 && (\r\n          <Card>\r\n            <Table\r\n              columns={columns}\r\n              loading={loading}\r\n              dataSource={data}\r\n              scroll={{ x: 1300 }}\r\n            />\r\n          </Card>\r\n        )}\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientInformation;\r\n"],"sourceRoot":""}