{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","views/EditarPaciente.jsx","views/CreatePatient.jsx","views/PatientInformation.jsx"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","EditarPaciente","_ref","setIsActualizar","open","setOpen","idPaciente","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_Form$useForm","Form","useForm","form","_message$useMessage","message","useMessage","_message$useMessage2","messageApi","contextHolder","_useState7","_useState8","listaCiudades","setListaCiudades","_useState9","Direccion","Celular","Tel","Ciudad","Email","_useState10","paciente","setPaciente","close","useEffect","getPaciente","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","infoPaciente","wrap","_context","prev","getInfoGeneralPacient","sent","listCiudades","stop","apply","arguments","onFinish","_ref3","_callee2","values","_error$response","_error$response$data","_context2","console","log","updatePatient","type","content","t0","response","data","_x","_jsxs","_Fragment","children","_jsx","Modal","title","onCancel","onOk","footer","Button","onClick","htmlType","style","backgroundColor","color","disabled","getFieldsError","filter","_ref4","errors","id","name","autoComplete","layout","fields","className","Item","label","rules","required","Input","pattern","Select","showSearch","optionFilterProp","filterOption","input","option","_option$label","toLowerCase","includes","options","CreatePatient","dataIntegrarPaciente","numero_doc","getDatagrid","cargando","_notification$useNoti","notification","useNotification","_notification$useNoti2","notificationApi","history","useHistory","typeDocs","setTypeDoc","tipo_documento","numero_documento","setValues","onSubmit","_values","createPatient","description","push","pathname","concat","state","getDocuments","resp","list_documents_integ_patient","_callee3","TipoValue","_iterator","_step","doc","json","_error$response2","_error$response2$data","_context3","Integrar","Tipo_Documento","abrupt","finish","Numero_Documento","filtros","t1","submit","colon","placeholder","onChange","target","_objectSpread","_defineProperty","PatientInformation","disabledInput","setDisabledInput","disabledButton","setDisabledButton","nombre","setNombre","tipoDoc","setTipoDoc","_useState11","undefined","_useState12","numeroDoc","setNumeroDoc","_useState13","_useState14","setData","_useState15","_useState16","openModal","setOpenModal","_useState17","_useState18","_useState19","_useState20","openModalPatient","setOpenModalPatient","_useState21","_useState22","_useState23","_useState24","setDataIntegrarPaciente","_values$nombre","_resp","list_patients","refact","TipoLabel","tipo_doc","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","isConfirmed","_x2","on_change","Var","listDocumentsPatients","columns","dataIndex","key","render","align","fixed","width","view","_callee4","registros","_context4","TriggerUpdatePatient","getConsulta","detail","cursor","handlePaste","event","pastedText","clipboardData","getData","setTimeout","Spin","spinning","Card","headStyle","background","fontWeight","fontSize","actions","resetFields","onPaste","Space","Compact","block","test","hidden","Table","dataSource","scroll","x"],"mappings":"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","file":"static/js/12.646b54b4.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { Modal, Button, Form, Input, message, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getInfoGeneralPacient,\r\n  updatePatient,\r\n  listCiudades,\r\n} from \"../appRedux/services\";\r\n\r\nexport const EditarPaciente = ({\r\n  setIsActualizar,\r\n  open,\r\n  setOpen,\r\n  idPaciente,\r\n}) => {\r\n  const [field1Value, setField1Value] = useState(\"\");\r\n  const [field2Value, setField2Value] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [listaCiudades, setListaCiudades] = useState([]);\r\n  const [paciente, setPaciente] = useState({\r\n    Direccion: \"\",\r\n    Celular: \"\",\r\n    Tel: \"\",\r\n    Ciudad: \"\",\r\n    Email: \"\",\r\n  });\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (idPaciente && open) {\r\n      getPaciente();\r\n    }\r\n  }, [open]);\r\n\r\n  const getPaciente = async () => {\r\n    const infoPaciente = await getInfoGeneralPacient(idPaciente);\r\n    setPaciente(infoPaciente);\r\n    const listaCiudades = await listCiudades();\r\n    setListaCiudades(listaCiudades);\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    setLoading(true);\r\n\r\n    try {\r\n      await updatePatient(idPaciente, values);\r\n      await messageApi.open({\r\n        type: \"success\",\r\n        content: \"Paciente Actualizado Correctamente\",\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await messageApi.open({\r\n        type: \"error\",\r\n        content: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    // const resp = await updatePatient(idPaciente, values);\r\n    // console.log(\"actualizar paciente: \", resp);\r\n    // if (resp?.status === \"fail\") {\r\n    //   console.log(\"Actualizar: \", resp);\r\n    //   await messageApi.open({\r\n    //     type: \"error\",\r\n    //     content: resp?.message || \"error\",\r\n    //   });\r\n    // }\r\n    // if (resp?.status === \"ok\") {\r\n    //   await messageApi.open({\r\n    //     type: \"success\",\r\n    //     content: \"Se ha editado correctamente el paciente\",\r\n    //   });\r\n    // }\r\n    setLoading(false);\r\n    setIsActualizar(true);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    const regex = /^[0-9]*$/;\r\n    if (regex.test(e.target.value)) {\r\n      e.target.value = \"\";\r\n    }\r\n    if (field === \"field1\") {\r\n      setField1Value(e.target.value);\r\n    } else if (field === \"field2\") {\r\n      setField2Value(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Editar Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        onOk={onFinish}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-actualizar\"\r\n            htmlType=\"submit\"\r\n            form=\"basic\"\r\n            loading={loading}\r\n            style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n            // onClick={() => onFinish}\r\n            disabled={\r\n              //form.isFieldsTouched(false) ||\r\n              form.getFieldsError().filter(({ errors }) => errors.length)\r\n                .length > 0\r\n            }\r\n          >\r\n            Actualizar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={form}\r\n          id=\"basic\"\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          // onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          layout=\"vertical\"\r\n          fields={[\r\n            {\r\n              name: [\"direccion\"],\r\n              value: paciente?.Direccion || \"\",\r\n            },\r\n            {\r\n              name: [\"celular\"],\r\n              value: paciente?.Celular || \"\",\r\n            },\r\n            {\r\n              name: [\"tel\"],\r\n              value: paciente?.Tel || \"\",\r\n            },\r\n            {\r\n              name: [\"ciudad\"],\r\n              value: paciente?.Ciudad || \"\",\r\n            },\r\n            {\r\n              name: [\"email\"],\r\n              value: paciente?.Email || \"\",\r\n            },\r\n          ]}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Dirección\"\r\n                name=\"direccion\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Celular\"\r\n                name=\"celular\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field1\")}\r\n                  //value={field1Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Teléfono\"\r\n                name=\"tel\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field2\")}\r\n                  //value={field2Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Ciudad\"\r\n                name=\"ciudad\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  name=\"ciudad\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={listaCiudades}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa un correo electrónico válido\",\r\n                    type: \"email\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"email\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Button, Form, Input, notification, Modal, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createPatient,\r\n  list_documents_integ_patient,\r\n} from \"../appRedux/services\";\r\n\r\nconst CreatePatient = ({\r\n  open,\r\n  setOpen,\r\n  numero_doc,\r\n  dataIntegrarPaciente,\r\n  getDatagrid,\r\n  cargando,\r\n}) => {\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const close = () => setOpen(false);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [values, setValues] = useState({\r\n    tipo_documento: \"\",\r\n    numero_documento: \"\",\r\n  });\r\n\r\n  const onSubmit = async (_values) => {\r\n    setLoading(true);\r\n    try {\r\n      await createPatient(_values);\r\n      await notificationApi.open({\r\n        type: \"success\",\r\n        description: \"Paciente integrado correctamente\",\r\n      });\r\n      history.push({\r\n        pathname: `/detail-patient/${_values?.numero_documento}`,\r\n        state: { type: \"numero_document\" },\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await notificationApi.open({\r\n        type: \"error\",\r\n        description: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await list_documents_integ_patient();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  const on_change = ({ target }) => {\r\n    console.log(\"target\", target);\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let TipoValue;\r\n    if (dataIntegrarPaciente.Integrar) {\r\n      for (let doc of typeDocs) {\r\n        if (doc.label === dataIntegrarPaciente?.Tipo_Documento) {\r\n          TipoValue = doc.value;\r\n          break;\r\n        }\r\n      }\r\n      const json = {\r\n        tipo_documento: TipoValue,\r\n        numero_documento: dataIntegrarPaciente?.Numero_Documento,\r\n      };\r\n      try {\r\n        await createPatient(json);\r\n        await notificationApi.open({\r\n          type: \"success\",\r\n          description: \"Paciente integrado correctamente\",\r\n        });\r\n        getDatagrid(dataIntegrarPaciente?.filtros);\r\n      } catch (error) {\r\n        await notificationApi.open({\r\n          type: \"error\",\r\n          description: error.response?.data?.message,\r\n        });\r\n        cargando(false);\r\n      }\r\n    }\r\n  }, [dataIntegrarPaciente]);\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Crear Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-integrar\"\r\n            loading={loading}\r\n            onClick={() => form.submit()}\r\n          >\r\n            Integrar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"wrap\"\r\n          layout=\"vertical\"\r\n          colon={false}\r\n          onFinish={onSubmit}\r\n          form={form}\r\n          autoComplete=\"off\"\r\n          // fields={[\r\n          //   {\r\n          //     name: [\"numero_documento\"],\r\n          //     value: numero_doc || \"\",\r\n          //   },\r\n          // ]}\r\n        >\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Tipo de documento\"\r\n                name=\"tipo_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  className=\"w-100\"\r\n                  showSearch\r\n                  placeholder=\"Selecciona tipo de documento\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={typeDocs}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Número de documento\"\r\n                name=\"numero_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input onChange={on_change} name=\"numero_documento\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePatient;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  list_patients,\r\n  TriggerUpdatePatient,\r\n  listDocumentsPatients,\r\n  getConsulta,\r\n  actualizarRegistroNovedadInformado,\r\n} from \"../appRedux/services\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  notification,\r\n  Table,\r\n  Input,\r\n  Select,\r\n  Space,\r\n  Spin,\r\n} from \"antd\";\r\nimport Swal from \"sweetalert2\";\r\nimport CreatePatient from \"./CreatePatient\";\r\nimport { EditarPaciente } from \"./EditarPaciente\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PatientInformation = () => {\r\n  const [form] = Form.useForm();\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const [disabledInput, setDisabledInput] = useState(false);\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [tipoDoc, setTipoDoc] = useState(\"\");\r\n  const [numeroDoc, setNumeroDoc] = useState(undefined);\r\n  const [data, setData] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [paciente, setPaciente] = useState(null);\r\n  const [openModalPatient, setOpenModalPatient] = useState(false);\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const [dataIntegrarPaciente, setDataIntegrarPaciente] = useState({\r\n    Integrar: false,\r\n    Tipo_Documento: null,\r\n    Numero_Documento: null,\r\n    filtros: null,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    if (values?.nombre?.length >= 3 && numeroDoc === undefined) {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    } else if (numeroDoc !== undefined && nombre === \"\") {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const refact = async (values) => {\r\n    if (\r\n      values?.nombre === undefined ||\r\n      values?.nombre === \"\" ||\r\n      values?.nombre === null\r\n    ) {\r\n      let TipoLabel;\r\n      for (let doc of typeDocs) {\r\n        if (doc.value === values.tipo_doc) {\r\n          TipoLabel = doc.label;\r\n          break;\r\n        }\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: true,\r\n        Tipo_Documento: TipoLabel,\r\n        Numero_Documento: numeroDoc,\r\n        filtros: values,\r\n      });\r\n    } else {\r\n      const result = await Swal.fire({\r\n        title: \"No existen registros\",\r\n        text: \"¿Desea integrar un paciente?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: \"No\",\r\n        confirmButtonText: \"Si, integrar\",\r\n      });\r\n      if (result.isConfirmed) {\r\n        setOpenModal(true);\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const on_change = (value) => {\r\n    const { target } = value;\r\n    setDisabledButton(false);\r\n    console.log(`Valores: ${nombre}, ${tipoDoc}, ${numeroDoc}`);\r\n    if (target?.value !== undefined && target?.value !== \"\") {\r\n      if (target.name === \"numero_doc\") {\r\n        const Var = target.value;\r\n        setNumeroDoc(Var);\r\n        setNombre(\"\");\r\n      }\r\n      if (target.name === \"nombre\") {\r\n        const Var = target.value;\r\n        onSubmit({ nombre: Var });\r\n        setNombre(Var);\r\n        setNumeroDoc(undefined);\r\n        setTipoDoc(\"\");\r\n      }\r\n      if (target.name === \"tipo_doc\") {\r\n        const Var = target.value;\r\n        setTipoDoc(Var);\r\n        setNombre(\"\");\r\n        setNumeroDoc(undefined);\r\n      }\r\n      setDisabledInput({ name: target.name });\r\n      if (\r\n        (tipoDoc !== \"\" && numeroDoc !== undefined && nombre === \"\") ||\r\n        (tipoDoc === \"\" && numeroDoc === undefined && nombre !== \"\")\r\n      ) {\r\n        setDisabledButton(false);\r\n      } else {\r\n        setDisabledButton(true);\r\n      }\r\n    } else {\r\n      setNumeroDoc(undefined);\r\n      setDisabledInput(false);\r\n      setDisabledButton(true);\r\n    }\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    const regex = /^[0-9]{0,20}$|^$/;\r\n    if (regex.test(e.target.value)) {\r\n      on_change(e);\r\n    }\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await listDocumentsPatients();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"nombres\",\r\n      key: \"nombres\",\r\n      render :(text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"apellidos\",\r\n      key: \"apellidos\",\r\n      render :(text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Tipo de documento\",\r\n      dataIndex: \"tipo_documento\",\r\n      key: \"tipo_documento\",\r\n    },\r\n    {\r\n      title: \"Número de documento\",\r\n      dataIndex: \"numero_documento\",\r\n      key: \"numero_documento\",\r\n      render :(text) => <strong>{text}</strong>,\r\n    },\r\n    {\r\n      title: \"Celular\",\r\n      key: \"celular\",\r\n      dataIndex: \"celular\",\r\n    },\r\n    {\r\n      title: \"Tipo Afiliación\",\r\n      dataIndex: \"tipoAfiliacion\",\r\n      key: \"tipoAfiliacion\",\r\n    },\r\n    {\r\n      title: \"Nivel Afiliación\",\r\n      dataIndex: \"nivelAfiliacion\",\r\n      key: \"nivelAfiliacion\",\r\n    },\r\n    // {\r\n    //   title: \"ID\",\r\n    //   dataIndex: \"id\",\r\n    //   key: \"id\",\r\n    // },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      children: [\r\n        {\r\n          title: \"Ver\",\r\n          key: \"ver\",\r\n          fixed: \"right\",\r\n          width: \"5%\",\r\n          render: (data) => {\r\n            const view = async () => {\r\n              setLoading(true);\r\n              try {\r\n                await TriggerUpdatePatient(data?.numero_documento);\r\n                notificationApi.open({\r\n                  type: \"success\",\r\n                  content: \"Actualizado correctamente\",\r\n                });\r\n                const registros = await getConsulta(data?.numero_documento);\r\n                setLoading(false);\r\n                history.push({\r\n                  pathname: `/detail-patient/${data?.id}`,\r\n                  state: { detail: registros },\r\n                });\r\n              } catch (error) {\r\n                notificationApi.open({\r\n                  type: \"error\",\r\n                  content: error.response?.data?.message || \"error\",\r\n                });\r\n                setLoading(false);\r\n                history.push(`/detail-patient/${data?.id}`);\r\n              }\r\n            };\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-view\"\r\n                onClick={view}\r\n              />\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Editar\",\r\n          key: \"editar\",\r\n          dataIndex: \"id\",\r\n          fixed: \"right\",\r\n          width: \"6%\",\r\n          render: (id) => {\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-edit\"\r\n                onClick={() => {\r\n                  setOpenModalPatient(true);\r\n                  setPaciente(id);\r\n                }}\r\n              />\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handlePaste = (event) => {\r\n    const pastedText = event.clipboardData.getData(\"text\");\r\n    setTimeout(() => {\r\n      if (pastedText != null || pastedText != \"\" || pastedText != undefined) {\r\n        setDisabledButton(false);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spin spinning={loading}>\r\n        {contextHolder}\r\n        <CreatePatient\r\n          open={openModal}\r\n          setOpen={setOpenModal}\r\n          numero_doc={numeroDoc}\r\n          getDatagrid={onSubmit}\r\n          dataIntegrarPaciente={dataIntegrarPaciente}\r\n          cargando={setLoading}\r\n        />\r\n        <EditarPaciente\r\n          open={openModalPatient}\r\n          setOpen={setOpenModalPatient}\r\n          idPaciente={paciente}\r\n        />\r\n        <Card\r\n          headStyle={{ background: \"#184F9D\" }}\r\n          title={\r\n            <span\r\n              style={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"#FFF\" }}\r\n            >\r\n              Buscar Paciente\r\n            </span>\r\n          }\r\n          // extra={\r\n          //   <Button\r\n          //     style={{ color: \"#038fde\" }}\r\n          //     onClick={() => setOpenModal(true)}\r\n          //   >\r\n          //     Integrar\r\n          //   </Button>\r\n          // }\r\n          actions={[\r\n            <Button\r\n              key=\"Limpiar\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => {\r\n                form.resetFields();\r\n                setDisabledInput(false);\r\n                setNumeroDoc(null);\r\n                setData([]);\r\n                setDisabledButton(true);\r\n                setTipoDoc(\"\");\r\n              }}\r\n            >\r\n              Limpiar Filtros\r\n            </Button>,\r\n            <Button\r\n              key=\"Consultar\"\r\n              style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => form.submit()}\r\n              disabled={disabledButton}\r\n              loading={loading}\r\n            >\r\n              Consultar\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form\r\n            name=\"wrap\"\r\n            layout=\"vertical\"\r\n            colon={false}\r\n            onFinish={onSubmit}\r\n            form={form}\r\n            autoComplete=\"off\"\r\n          >\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Form.Item\r\n                  label=\"Nombre completo\"\r\n                  name=\"nombre\"\r\n                  // rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n                >\r\n                  <Input\r\n                    onChange={on_change}\r\n                    //value={nombre}\r\n                    name=\"nombre\"\r\n                    disabled={\r\n                      disabledInput?.name === \"numero_doc\" ||\r\n                      disabledInput?.name === \"tipo_doc\"\r\n                    }\r\n                    onPaste={(event) => {\r\n                      handlePaste(event);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Space.Compact block>\r\n                  <Form.Item\r\n                    label=\"Tipo\"\r\n                    name=\"tipo_doc\"\r\n                    style={{ width: \"15%\" }}\r\n                  >\r\n                    <Select\r\n                      onChange={(value) => {\r\n                        on_change({\r\n                          target: { name: \"tipo_doc\", value: value },\r\n                        });\r\n                      }}\r\n                      name=\"tipo_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      options={typeDocs}\r\n                      value={tipoDoc}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Número de documento\"\r\n                    name=\"numero_doc\"\r\n                    style={{ width: \"85%\" }}\r\n                  >\r\n                    <Input\r\n                      onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                      onPaste={(event) => {\r\n                        handlePaste(event);\r\n                      }}\r\n                    />\r\n                    <input\r\n                      hidden\r\n                      // onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      //disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                    />\r\n                  </Form.Item>\r\n                </Space.Compact>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n        {data.length > 0 && (\r\n          <Card>\r\n            <Table\r\n              columns={columns}\r\n              loading={loading}\r\n              dataSource={data}\r\n              scroll={{ x: 1300 }}\r\n            />\r\n          </Card>\r\n        )}\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientInformation;\r\n"],"sourceRoot":""}