{"version":3,"sources":["views/CreatePatient.jsx","views/PatientInformation.jsx","views/EditarPaciente.jsx"],"names":["CreatePatient","_ref","open","setOpen","dataIntegrarPaciente","numero_doc","getDatagrid","cargando","_notification$useNoti","notification","useNotification","_notification$useNoti2","_slicedToArray","notificationApi","contextHolder","history","useHistory","_useState","useState","_useState2","typeDocs","setTypeDoc","close","_Form$useForm","Form","useForm","form","_useState3","_useState4","loading","setLoading","_useState5","tipo_documento","numero_documento","_useState6","values","setValues","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_values","_error$response","_error$response$data","wrap","_context","prev","next","createPatient","type","description","push","pathname","concat","state","t0","response","data","message","stop","_x","apply","arguments","getDocuments","_ref3","_callee2","resp","_context2","list_documents_integ_patient","sent","useEffect","_callee3","TipoValue","_iterator","_step","doc","json","_error$response2","_error$response2$data","_context3","Integrar","_createForOfIteratorHelper","s","n","done","value","label","Tipo_Documento","abrupt","e","f","finish","Numero_Documento","filtros","t1","_jsxs","_Fragment","children","_jsx","Modal","title","onCancel","footer","Button","onClick","submit","name","layout","colon","onFinish","autoComplete","className","Item","rules","required","Select","showSearch","placeholder","optionFilterProp","filterOption","input","option","_option$label","toLowerCase","includes","options","Input","onChange","_ref4","target","console","log","_objectSpread","_defineProperty","PatientInformation","disabledInput","setDisabledInput","disabledButton","setDisabledButton","_useState7","_useState8","nombre","setNombre","_useState9","_useState10","tipoDoc","setTipoDoc","_useState11","undefined","_useState12","numeroDoc","setNumeroDoc","_useState13","_useState14","setData","_useState15","_useState16","openModal","setOpenModal","_useState17","_useState18","paciente","setPaciente","_useState19","_useState20","openModalPatient","setOpenModalPatient","_useState21","_useState22","_useState23","_useState24","setDataIntegrarPaciente","_values$nombre","_resp","length","list_patients","refact","TipoLabel","tipo_doc","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","isConfirmed","_x2","on_change","Var","listDocumentsPatients","columns","dataIndex","key","align","fixed","width","render","view","_callee4","registros","_context4","TriggerUpdatePatient","content","getConsulta","id","detail","style","cursor","handlePaste","event","pastedText","clipboardData","getData","setTimeout","Spin","spinning","EditarPaciente","idPaciente","Card","headStyle","background","fontWeight","fontSize","color","actions","htmlType","resetFields","backgroundColor","disabled","onPaste","Space","Compact","block","test","hidden","Table","dataSource","scroll","x","setIsActualizar","_message$useMessage","useMessage","_message$useMessage2","messageApi","listaCiudades","setListaCiudades","Direccion","Celular","Tel","Ciudad","Email","getPaciente","infoPaciente","getInfoGeneralPacient","listCiudades","updatePatient","onOk","getFieldsError","filter","errors","fields","pattern"],"mappings":"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","file":"static/js/11.b80f30dc.chunk.js","sourcesContent":["import { Button, Form, Input, notification, Modal, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  createPatient,\r\n  list_documents_integ_patient,\r\n} from \"../appRedux/services\";\r\n\r\nconst CreatePatient = ({\r\n  open,\r\n  setOpen,\r\n  numero_doc,\r\n  dataIntegrarPaciente,\r\n  getDatagrid,\r\n  cargando,\r\n}) => {\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const history = useHistory();\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const close = () => setOpen(false);\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const [values, setValues] = useState({\r\n    tipo_documento: \"\",\r\n    numero_documento: \"\",\r\n  });\r\n\r\n  const onSubmit = async (_values) => {\r\n    setLoading(true);\r\n    try {\r\n      await createPatient(_values);\r\n      await notificationApi.open({\r\n        type: \"success\",\r\n        description: \"Paciente integrado correctamente\",\r\n      });\r\n      history.push({\r\n        pathname: `/detail-patient/${_values?.numero_documento}`,\r\n        state: { type: \"numero_document\" },\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await notificationApi.open({\r\n        type: \"error\",\r\n        description: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await list_documents_integ_patient();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  const on_change = ({ target }) => {\r\n    console.log(\"target\", target);\r\n    setValues({ ...values, [target.name]: target.value });\r\n  };\r\n\r\n  useEffect(async () => {\r\n    let TipoValue;\r\n    if (dataIntegrarPaciente.Integrar) {\r\n      for (let doc of typeDocs) {\r\n        if (doc.label === dataIntegrarPaciente?.Tipo_Documento) {\r\n          TipoValue = doc.value;\r\n          break;\r\n        }\r\n      }\r\n      const json = {\r\n        tipo_documento: TipoValue,\r\n        numero_documento: dataIntegrarPaciente?.Numero_Documento,\r\n      };\r\n      try {\r\n        await createPatient(json);\r\n        await notificationApi.open({\r\n          type: \"success\",\r\n          description: \"Paciente integrado correctamente\",\r\n        });\r\n        getDatagrid(dataIntegrarPaciente?.filtros);\r\n      } catch (error) {\r\n        await notificationApi.open({\r\n          type: \"error\",\r\n          description: error.response?.data?.message,\r\n        });\r\n        cargando(false);\r\n      }\r\n    }\r\n  }, [dataIntegrarPaciente]);\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Crear Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-integrar\"\r\n            loading={loading}\r\n            onClick={() => form.submit()}\r\n          >\r\n            Integrar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          name=\"wrap\"\r\n          layout=\"vertical\"\r\n          colon={false}\r\n          onFinish={onSubmit}\r\n          form={form}\r\n          autoComplete=\"off\"\r\n          // fields={[\r\n          //   {\r\n          //     name: [\"numero_documento\"],\r\n          //     value: numero_doc || \"\",\r\n          //   },\r\n          // ]}\r\n        >\r\n          <div className=\"row align-items-center\">\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Tipo de documento\"\r\n                name=\"tipo_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  className=\"w-100\"\r\n                  showSearch\r\n                  placeholder=\"Selecciona tipo de documento\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={typeDocs}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n              <Form.Item\r\n                label=\"Número de documento\"\r\n                name=\"numero_documento\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input onChange={on_change} name=\"numero_documento\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePatient;\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  list_patients,\r\n  TriggerUpdatePatient,\r\n  listDocumentsPatients,\r\n  getConsulta,\r\n  actualizarRegistroNovedadInformado,\r\n} from \"../appRedux/services\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  notification,\r\n  Table,\r\n  Input,\r\n  Select,\r\n  Space,\r\n  Spin,\r\n} from \"antd\";\r\nimport Swal from \"sweetalert2\";\r\nimport CreatePatient from \"./CreatePatient\";\r\nimport { EditarPaciente } from \"./EditarPaciente\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst PatientInformation = () => {\r\n  const [form] = Form.useForm();\r\n  const [notificationApi, contextHolder] = notification.useNotification();\r\n  const [disabledInput, setDisabledInput] = useState(false);\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nombre, setNombre] = useState(\"\");\r\n  const [tipoDoc, setTipoDoc] = useState(\"\");\r\n  const [numeroDoc, setNumeroDoc] = useState(undefined);\r\n  const [data, setData] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [paciente, setPaciente] = useState(null);\r\n  const [openModalPatient, setOpenModalPatient] = useState(false);\r\n  const [typeDocs, setTypeDoc] = useState([]);\r\n  const [dataIntegrarPaciente, setDataIntegrarPaciente] = useState({\r\n    Integrar: false,\r\n    Tipo_Documento: null,\r\n    Numero_Documento: null,\r\n    filtros: null,\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    if (values?.nombre?.length >= 3 && numeroDoc === undefined) {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    } else if (numeroDoc !== undefined && nombre === \"\") {\r\n      setLoading(true);\r\n      console.log(\"que saca: \", values);\r\n      const resp = await list_patients(numeroDoc, values);\r\n      if (resp.length === 0) {\r\n        await refact(values);\r\n      } else {\r\n        setLoading(false);\r\n        setData(resp);\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: false,\r\n        Tipo_Documento: null,\r\n        Numero_Documento: null,\r\n        filtros: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const refact = async (values) => {\r\n    if (\r\n      values?.nombre === undefined ||\r\n      values?.nombre === \"\" ||\r\n      values?.nombre === null\r\n    ) {\r\n      let TipoLabel;\r\n      for (let doc of typeDocs) {\r\n        if (doc.value === values.tipo_doc) {\r\n          TipoLabel = doc.label;\r\n          break;\r\n        }\r\n      }\r\n      setDataIntegrarPaciente({\r\n        Integrar: true,\r\n        Tipo_Documento: TipoLabel,\r\n        Numero_Documento: numeroDoc,\r\n        filtros: values,\r\n      });\r\n    } else {\r\n      const result = await Swal.fire({\r\n        title: \"No existen registros\",\r\n        text: \"¿Desea integrar un paciente?\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#3085d6\",\r\n        cancelButtonColor: \"#d33\",\r\n        cancelButtonText: \"No\",\r\n        confirmButtonText: \"Si, integrar\",\r\n      });\r\n      if (result.isConfirmed) {\r\n        setOpenModal(true);\r\n        setLoading(false);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const on_change = (value) => {\r\n    const { target } = value;\r\n    setDisabledButton(false);\r\n    console.log(`Valores: ${nombre}, ${tipoDoc}, ${numeroDoc}`);\r\n    if (target?.value !== undefined && target?.value !== \"\") {\r\n      if (target.name === \"numero_doc\") {\r\n        const Var = target.value;\r\n        setNumeroDoc(Var);\r\n        setNombre(\"\");\r\n      }\r\n      if (target.name === \"nombre\") {\r\n        const Var = target.value;\r\n        onSubmit({ nombre: Var });\r\n        setNombre(Var);\r\n        setNumeroDoc(undefined);\r\n        setTipoDoc(\"\");\r\n      }\r\n      if (target.name === \"tipo_doc\") {\r\n        const Var = target.value;\r\n        setTipoDoc(Var);\r\n        setNombre(\"\");\r\n        setNumeroDoc(undefined);\r\n      }\r\n      setDisabledInput({ name: target.name });\r\n      if (\r\n        (tipoDoc !== \"\" && numeroDoc !== undefined && nombre === \"\") ||\r\n        (tipoDoc === \"\" && numeroDoc === undefined && nombre !== \"\")\r\n      ) {\r\n        setDisabledButton(false);\r\n      } else {\r\n        setDisabledButton(true);\r\n      }\r\n    } else {\r\n      setNumeroDoc(undefined);\r\n      setDisabledInput(false);\r\n      setDisabledButton(true);\r\n    }\r\n  };\r\n\r\n  const changeNumber = (e) => {\r\n    const regex = /^[0-9]{0,20}$|^$/;\r\n    if (regex.test(e.target.value)) {\r\n      on_change(e);\r\n    }\r\n  };\r\n\r\n  const getDocuments = async () => {\r\n    const resp = await listDocumentsPatients();\r\n    setTypeDoc(resp);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDocuments();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Nombres\",\r\n      dataIndex: \"nombres\",\r\n      key: \"nombres\",\r\n    },\r\n    {\r\n      title: \"Apellidos\",\r\n      dataIndex: \"apellidos\",\r\n      key: \"apellidos\",\r\n    },\r\n    {\r\n      title: \"Tipo de documento\",\r\n      dataIndex: \"tipo_documento\",\r\n      key: \"tipo_documento\",\r\n    },\r\n    {\r\n      title: \"Número de documento\",\r\n      dataIndex: \"numero_documento\",\r\n      key: \"numero_documento\",\r\n    },\r\n    {\r\n      title: \"Celular\",\r\n      key: \"celular\",\r\n      dataIndex: \"celular\",\r\n    },\r\n    {\r\n      title: \"Tipo Afiliación\",\r\n      dataIndex: \"tipoAfiliacion\",\r\n      key: \"tipoAfiliacion\",\r\n    },\r\n    {\r\n      title: \"Nivel Afiliación\",\r\n      dataIndex: \"nivelAfiliacion\",\r\n      key: \"nivelAfiliacion\",\r\n    },\r\n    // {\r\n    //   title: \"ID\",\r\n    //   dataIndex: \"id\",\r\n    //   key: \"id\",\r\n    // },\r\n    {\r\n      title: \"Acciones\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      children: [\r\n        {\r\n          title: \"Ver\",\r\n          key: \"ver\",\r\n          fixed: \"right\",\r\n          width: \"5%\",\r\n          render: (data) => {\r\n            const view = async () => {\r\n              setLoading(true);\r\n              try {\r\n                await TriggerUpdatePatient(data?.numero_documento);\r\n                notificationApi.open({\r\n                  type: \"success\",\r\n                  content: \"Actualizado correctamente\",\r\n                });\r\n                const registros = await getConsulta(data?.numero_documento);\r\n                setLoading(false);\r\n                history.push({\r\n                  pathname: `/detail-patient/${data?.id}`,\r\n                  state: { detail: registros },\r\n                });\r\n              } catch (error) {\r\n                notificationApi.open({\r\n                  type: \"error\",\r\n                  content: error.response?.data?.message || \"error\",\r\n                });\r\n                setLoading(false);\r\n                history.push(`/detail-patient/${data?.id}`);\r\n              }\r\n            };\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-view\"\r\n                onClick={view}\r\n              />\r\n            );\r\n          },\r\n        },\r\n        {\r\n          title: \"Editar\",\r\n          key: \"editar\",\r\n          dataIndex: \"id\",\r\n          fixed: \"right\",\r\n          width: \"6%\",\r\n          render: (id) => {\r\n            return (\r\n              <i\r\n                style={{ cursor: \"pointer\" }}\r\n                className=\"icon icon-edit\"\r\n                onClick={() => {\r\n                  setOpenModalPatient(true);\r\n                  setPaciente(id);\r\n                }}\r\n              />\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const handlePaste = (event) => {\r\n    const pastedText = event.clipboardData.getData(\"text\");\r\n    setTimeout(() => {\r\n      if (pastedText != null || pastedText != \"\" || pastedText != undefined) {\r\n        setDisabledButton(false);\r\n      }\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Spin spinning={loading}>\r\n        {contextHolder}\r\n        <CreatePatient\r\n          open={openModal}\r\n          setOpen={setOpenModal}\r\n          numero_doc={numeroDoc}\r\n          getDatagrid={onSubmit}\r\n          dataIntegrarPaciente={dataIntegrarPaciente}\r\n          cargando={setLoading}\r\n        />\r\n        <EditarPaciente\r\n          open={openModalPatient}\r\n          setOpen={setOpenModalPatient}\r\n          idPaciente={paciente}\r\n        />\r\n        <Card\r\n          headStyle={{ background: \"#184F9D\" }}\r\n          title={\r\n            <span\r\n              style={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"#FFF\" }}\r\n            >\r\n              Buscar Paciente\r\n            </span>\r\n          }\r\n          // extra={\r\n          //   <Button\r\n          //     style={{ color: \"#038fde\" }}\r\n          //     onClick={() => setOpenModal(true)}\r\n          //   >\r\n          //     Integrar\r\n          //   </Button>\r\n          // }\r\n          actions={[\r\n            <Button\r\n              key=\"Limpiar\"\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => {\r\n                form.resetFields();\r\n                setDisabledInput(false);\r\n                setNumeroDoc(null);\r\n                setData([]);\r\n                setDisabledButton(true);\r\n                setTipoDoc(\"\");\r\n              }}\r\n            >\r\n              Limpiar Filtros\r\n            </Button>,\r\n            <Button\r\n              key=\"Consultar\"\r\n              style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              onClick={() => form.submit()}\r\n              disabled={disabledButton}\r\n              loading={loading}\r\n            >\r\n              Consultar\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Form\r\n            name=\"wrap\"\r\n            layout=\"vertical\"\r\n            colon={false}\r\n            onFinish={onSubmit}\r\n            form={form}\r\n            autoComplete=\"off\"\r\n          >\r\n            <div className=\"row align-items-center\">\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Form.Item\r\n                  label=\"Nombre completo\"\r\n                  name=\"nombre\"\r\n                  // rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n                >\r\n                  <Input\r\n                    onChange={on_change}\r\n                    //value={nombre}\r\n                    name=\"nombre\"\r\n                    disabled={\r\n                      disabledInput?.name === \"numero_doc\" ||\r\n                      disabledInput?.name === \"tipo_doc\"\r\n                    }\r\n                    onPaste={(event) => {\r\n                      handlePaste(event);\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <Space.Compact block>\r\n                  <Form.Item\r\n                    label=\"Tipo\"\r\n                    name=\"tipo_doc\"\r\n                    style={{ width: \"15%\" }}\r\n                  >\r\n                    <Select\r\n                      onChange={(value) => {\r\n                        on_change({\r\n                          target: { name: \"tipo_doc\", value: value },\r\n                        });\r\n                      }}\r\n                      name=\"tipo_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      options={typeDocs}\r\n                      value={tipoDoc}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    label=\"Número de documento\"\r\n                    name=\"numero_doc\"\r\n                    style={{ width: \"85%\" }}\r\n                  >\r\n                    <Input\r\n                      onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                      onPaste={(event) => {\r\n                        handlePaste(event);\r\n                      }}\r\n                    />\r\n                    <input\r\n                      hidden\r\n                      // onChange={changeNumber}\r\n                      name=\"numero_doc\"\r\n                      //disabled={disabledInput?.name === \"nombre\"}\r\n                      value={numeroDoc}\r\n                    />\r\n                  </Form.Item>\r\n                </Space.Compact>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Card>\r\n        {data.length > 0 && (\r\n          <Card>\r\n            <Table\r\n              columns={columns}\r\n              loading={loading}\r\n              dataSource={data}\r\n              scroll={{ x: 1300 }}\r\n            />\r\n          </Card>\r\n        )}\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PatientInformation;\r\n","import { Modal, Button, Form, Input, message, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  getInfoGeneralPacient,\r\n  updatePatient,\r\n  listCiudades,\r\n} from \"../appRedux/services\";\r\n\r\nexport const EditarPaciente = ({\r\n  setIsActualizar,\r\n  open,\r\n  setOpen,\r\n  idPaciente,\r\n}) => {\r\n  const [field1Value, setField1Value] = useState(\"\");\r\n  const [field2Value, setField2Value] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [messageApi, contextHolder] = message.useMessage();\r\n  const [listaCiudades, setListaCiudades] = useState([]);\r\n  const [paciente, setPaciente] = useState({\r\n    Direccion: \"\",\r\n    Celular: \"\",\r\n    Tel: \"\",\r\n    Ciudad: \"\",\r\n    Email: \"\",\r\n  });\r\n\r\n  const close = () => setOpen(false);\r\n\r\n  useEffect(() => {\r\n    if (idPaciente && open) {\r\n      getPaciente();\r\n    }\r\n  }, [open]);\r\n\r\n  const getPaciente = async () => {\r\n    const infoPaciente = await getInfoGeneralPacient(idPaciente);\r\n    setPaciente(infoPaciente);\r\n    const listaCiudades = await listCiudades();\r\n    setListaCiudades(listaCiudades);\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    console.log(values);\r\n    setLoading(true);\r\n\r\n    try {\r\n      await updatePatient(idPaciente, values);\r\n      await messageApi.open({\r\n        type: \"success\",\r\n        content: \"Paciente integrado correctamente\",\r\n      });\r\n      close();\r\n    } catch (error) {\r\n      await messageApi.open({\r\n        type: \"error\",\r\n        content: error.response?.data?.message,\r\n      });\r\n    }\r\n\r\n    // const resp = await updatePatient(idPaciente, values);\r\n    // console.log(\"actualizar paciente: \", resp);\r\n    // if (resp?.status === \"fail\") {\r\n    //   console.log(\"Actualizar: \", resp);\r\n    //   await messageApi.open({\r\n    //     type: \"error\",\r\n    //     content: resp?.message || \"error\",\r\n    //   });\r\n    // }\r\n    // if (resp?.status === \"ok\") {\r\n    //   await messageApi.open({\r\n    //     type: \"success\",\r\n    //     content: \"Se ha editado correctamente el paciente\",\r\n    //   });\r\n    // }\r\n    setLoading(false);\r\n    setIsActualizar(true);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = (e, field) => {\r\n    const regex = /^[0-9]*$/;\r\n    if (regex.test(e.target.value)) {\r\n      e.target.value = \"\";\r\n    }\r\n    if (field === \"field1\") {\r\n      setField1Value(e.target.value);\r\n    } else if (field === \"field2\") {\r\n      setField2Value(e.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {contextHolder}\r\n      <Modal\r\n        title=\"Editar Paciente\"\r\n        open={open}\r\n        onCancel={close}\r\n        onOk={onFinish}\r\n        footer={[\r\n          <Button key=\"button-cancel\" onClick={close}>\r\n            Cancelar\r\n          </Button>,\r\n          <Button\r\n            key=\"button-actualizar\"\r\n            htmlType=\"submit\"\r\n            form=\"basic\"\r\n            loading={loading}\r\n            style={{ backgroundColor: \"#00ABC8\", color: \"#FFF\" }}\r\n            // onClick={() => onFinish}\r\n            disabled={\r\n              //form.isFieldsTouched(false) ||\r\n              form.getFieldsError().filter(({ errors }) => errors.length)\r\n                .length > 0\r\n            }\r\n          >\r\n            Actualizar\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form\r\n          form={form}\r\n          id=\"basic\"\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          // onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          layout=\"vertical\"\r\n          fields={[\r\n            {\r\n              name: [\"direccion\"],\r\n              value: paciente?.Direccion || \"\",\r\n            },\r\n            {\r\n              name: [\"celular\"],\r\n              value: paciente?.Celular || \"\",\r\n            },\r\n            {\r\n              name: [\"tel\"],\r\n              value: paciente?.Tel || \"\",\r\n            },\r\n            {\r\n              name: [\"ciudad\"],\r\n              value: paciente?.Ciudad || \"\",\r\n            },\r\n            {\r\n              name: [\"email\"],\r\n              value: paciente?.Email || \"\",\r\n            },\r\n          ]}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Dirección\"\r\n                name=\"direccion\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Celular\"\r\n                name=\"celular\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field1\")}\r\n                  //value={field1Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Teléfono\"\r\n                name=\"tel\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa solo números\",\r\n                    pattern: /^[0-9]*$/,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  //onChange={(e) => handleInputChange(e, \"field2\")}\r\n                  //value={field2Value}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Ciudad\"\r\n                name=\"ciudad\"\r\n                rules={[{ required: true, message: \"Campo obligatorio\" }]}\r\n              >\r\n                <Select\r\n                  showSearch\r\n                  name=\"ciudad\"\r\n                  optionFilterProp=\"children\"\r\n                  filterOption={(input, option) =>\r\n                    (option?.label ?? \"\")\r\n                      .toLowerCase()\r\n                      .includes(input.toLowerCase())\r\n                  }\r\n                  options={listaCiudades}\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-12 col-md-6\">\r\n              <Form.Item\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Por favor, ingresa un correo electrónico válido\",\r\n                    type: \"email\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"email\" />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n"],"sourceRoot":""}